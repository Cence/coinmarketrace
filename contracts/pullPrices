pragma solidity ^0.5.0;
import "./Oraclize.sol";

contract pullPrices is usingProvable {

    string public coinA;
    event LogPriceUpdated(string price);
    event LogNewProvableQuery(string description);

       function __callback(bytes32 myid, string memory result) public {
        if (msg.sender != provable_cbAddress()) revert();
        coinA = result;
        emit LogPriceUpdated(result);
        updatePrice();
    }
   
    function updatePrice() public payable {
        if (provable_getPrice("URL") > address(this).balance) {
          emit LogNewProvableQuery("Provable query was NOT sent, please add some ETH to cover for the query fee");
        } else {
          emit LogNewProvableQuery("Provable query was sent, standing by for the answer..");

           provable_query("URL", "json(https://api.binance.com/api/v3/ticker/price?symbol=XRPUSDT).price");
        }
    }
    
    function () external payable {
        //accept ether
}
}
